package com.kano;import cn.hutool.core.lang.Console;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.junit.Test;import javax.imageio.ImageIO;import java.awt.*;import java.awt.image.BufferedImage;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.net.URL;import java.net.URLConnection;import java.util.Iterator;import java.util.List;/** * @author LiuShang * @date 2023-08-12 10:21 */public class Demo {    /**     * 输入文件夹路径,修改文件夹路径下的所有文件后缀名     */    @Test    public void demo01() {        String fileDirPath = Console.input(); // input        File fileDir = new File(fileDirPath);        for (File file : fileDir.listFiles()) {            String fileName = file.getName();            String suffix = fileName.substring(file.getName().lastIndexOf("."));            // 需要替换的文件后缀名            if (suffix.contains("jfif")) {                String newFilePath =                        fileDirPath + "\\" + fileName.substring(0, fileName.lastIndexOf(".")) + ".jpg";                file.renameTo(new File(newFilePath));            }        }        System.out.println("Success!!!");    }    /**     * 输入指定网站,采集资源文件存放到指定文件夹下     * <p>     * 爬取微信上的已售房源用到     * https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzkyNzE3NjM2MA==&action=getalbum&album_id=2513458737966350342     */    @Test    public void demo02() throws IOException {        // 下载到指定的文件夹下        System.out.println("请输入存储目录：");//        String savePath = Console.input();        String savePath = "C:\\Users\\Administrator\\Desktop\\新建文件夹";        int idx = 0;        System.out.println("请输入链接地址：");        String urlPath = Console.input();        Document doc = Jsoup.connect(urlPath).get();        Iterator<Element> elementIterator = doc.select("img").iterator();        while (elementIterator.hasNext()) {            Element element = elementIterator.next();//            String collectUrl = element.attr("data-src");            String collectUrl = element.attr("src");            System.out.println(collectUrl);            if (collectUrl.contains("http")) {                if (collectUrl.contains("jpeg")) {                /*                下载图片                 */                    downloadFileToDir(savePath, collectUrl, ".jpeg", idx++);                }                if (collectUrl.contains("png")) {                /*                下载图片                 */                    downloadFileToDir(savePath, collectUrl, ".png", idx++);                }                if (collectUrl.contains("jpg")) {                /*                下载图片                 */                    downloadFileToDir(savePath, collectUrl, ".jpg", idx++);                }            }        }        /*        扩充图片大小         *///        setImgSize(savePath, Arrays.asList(".jpeg", ".jpg"));    }    private static void downloadFileToDir(String savePath, String urlPath, String suffix, int idx) throws IOException {        URL url = new URL(urlPath);        URLConnection connection = url.openConnection();        // 设置请求超时为 10 秒        connection.setConnectTimeout(10 * 1000);        // 读取数据流并保存到本地        InputStream input = connection.getInputStream();        FileOutputStream output =                new FileOutputStream(savePath + "\\" + idx + suffix);        int len;        byte[] data = new byte[1024];        while ((len = input.read(data)) != -1) {            output.write(data, 0, len);        }        output.close();        input.close();    }    private static void setImgSize(String savePath, List<String> suffixList) throws IOException {        /*        当图片小于 600kb 时进行扩大处理         */        File fileDir = new File(savePath);        for (File file : fileDir.listFiles()) {            String fileName = file.getName();            String suffix = fileName.substring(file.getName().lastIndexOf("."));            if (suffixList.contains(suffix)) {                /*                尺寸 x2 遍历,直到文件大小 > 600kb                 */                while (true) {                    File loadFile = new File(savePath + "//" + fileName);                    if (loadFile.length() > 1024 * 600) break;                    // 加载图像                    BufferedImage inputImage = ImageIO.read(loadFile);                    int imageWidth = inputImage.getWidth();                    int imageHeight = inputImage.getHeight();                    // 调整图像大小                    BufferedImage outputImage = new BufferedImage(                            imageWidth * 2, imageHeight * 2, inputImage.getType());                    Graphics2D graphics = outputImage.createGraphics();                    graphics.drawImage(                            inputImage, 0, 0, imageWidth * 2, imageHeight * 2, null);                    graphics.dispose();                    // 保存调整后的图像                    File outputFile = new File(savePath + "//" + fileName);                    ImageIO.write(outputImage, "jpg", outputFile);                }            }            System.out.println(fileName + " Expansion succeeded!!!");        }    }}